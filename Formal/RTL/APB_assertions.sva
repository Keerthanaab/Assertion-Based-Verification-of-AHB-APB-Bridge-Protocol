module APB_assertions(
input wire Hclk,
input wire Hresetn,
input wire valid,
input wire Hwrite,
input wire [31:0] Hwdata,
input wire [31:0] Haddr,
input wire [31:0] Haddr1,
input wire [31:0] Haddr2,
input wire [31:0] Hwdata1,
input wire [31:0] Hwdata2,
input wire [31:0] Prdata,
input wire [2:0] tempselx,
input wire Hwritereg,
input wire Pwrite,
input wire Penable,
input wire [2:0] Pselx,
input wire [31:0] Paddr,
input wire [31:0] Pwdata,
input wire Hreadyout,
input wire [2:0] PRESENT_STATE,
input wire [2:0] NEXT_STATE);

parameter ST_IDLE=3'b000;
parameter ST_WWAIT=3'b001;
parameter ST_READ= 3'b010;
parameter ST_WRITE=3'b011;
parameter ST_WRITEP=3'b100;
parameter ST_RENABLE=3'b101;
parameter ST_WENABLE=3'b110;
parameter ST_WENABLEP=3'b111;


// IDLE
property idletoidle;
  @(posedge Hclk)
  Hresetn |-> PRESENT_STATE == ST_IDLE && !valid |-> NEXT_STATE == ST_IDLE;
endproperty

property idletowait;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_IDLE && valid && Hwrite |-> NEXT_STATE == ST_WWAIT;
endproperty

property idletoread;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_IDLE && valid && !Hwrite |-> NEXT_STATE == ST_READ;
endproperty

//WWAIT
property waittowrite;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WWAIT && !valid |-> NEXT_STATE == ST_WRITE;
endproperty

property waittowritep;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WWAIT && valid |-> NEXT_STATE == ST_WRITEP;
endproperty

//READ
property readtoreadenable;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_READ |-> NEXT_STATE == ST_RENABLE;
endproperty

//WRITE
property writetowriteenable;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WRITE && !valid |-> NEXT_STATE == ST_WENABLE;
endproperty

property writetowriteenablep;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WRITE && valid |-> NEXT_STATE == ST_WENABLEP;
endproperty

//WRITEP
property writeptowriteenablep;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WRITEP |-> NEXT_STATE == ST_WENABLEP;
endproperty

//RENABLE
property renabletoread;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_RENABLE && valid && !Hwrite |-> NEXT_STATE == ST_READ;
endproperty

property renabletowait;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_RENABLE && valid && Hwrite |-> NEXT_STATE == ST_WWAIT;
endproperty

property renabletoidle;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_RENABLE && !valid |-> NEXT_STATE == ST_IDLE;
endproperty

//WENABLE
property wenabletoread;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLE && valid && !Hwrite |-> NEXT_STATE == ST_READ;
endproperty

property wenabletowait;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLE && valid && Hwrite |-> NEXT_STATE == ST_WWAIT;
endproperty

property wenabletoidle;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLE && !valid |-> NEXT_STATE == ST_IDLE;
endproperty

//WENABLEP
property wenableptoread;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLEP && !Hwritereg |-> NEXT_STATE == ST_READ;
endproperty

property wenableptowritep;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLEP && valid && Hwritereg |-> NEXT_STATE == ST_WRITEP;
endproperty

property wenableptowrite;
  @(posedge Hclk) disable iff(!Hresetn)
  PRESENT_STATE == ST_WENABLEP && !valid && Hwritereg |-> NEXT_STATE == ST_WRITE;
endproperty


a2:assert property(idletoidle);
a3:assert property(idletowait);
a4:assert property(idletoread);

a5:assert property(waittowrite);
a6:assert property(waittowritep);

a7:assert property(readtoreadenable);

a8:assert property(writetowriteenable);
a9:assert property(writetowriteenablep);

a10:assert property(writeptowriteenablep);

a11:assert property(renabletoread);
a12:assert property(renabletowait);
a13:assert property(renabletoidle);

a14:assert property(wenabletoread);
a15:assert property(wenabletowait);
a16:assert property(wenabletoidle);

a17:assert property(wenableptoread);
a18:assert property(wenableptowritep);
a19:assert property(wenableptowrite);
endmodule
